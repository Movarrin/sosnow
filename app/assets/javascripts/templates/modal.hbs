<div id='container'>
    <div class='victim-model'>
    <h1>Victim's Info
    <h4>Name: {{this.modelData.[0].name}}</h4>
    <p>Age: {{this.modelData.[0].age}}</p>
    <p>Gender: {{this.modelData.[0].gender}}</p>
    <p>Phone: {{this.modelData.[0].phone}}</p>
    <p>Email: {{this.modelData.[0].email}}</p>
    <p>Location: {{this.modelData.[0].location}}</p>
    <p>Description: {{this.modelData.[0].description}}</p>
    {{if this.modelData.[0].description }}
   <p>Description: {{this.modelData.[0].description}}</p>
{{if this.modelData.[0].description }}
   <p>Description: {{this.modelData.[0].description}}</p>
   {{/if}}
   {{if this.modelData.[0].second_description}}
   <p>Description: {{this.modelData.[0].second_description}}</p>
   {{/if}}

    </div>

    <div id='wrap-this'>

        <div id='seeker-list'>
            <h2>List of Seekers</h2>
            {{#each this.modelData.[2]}}
            <p class= "seeker" data-value={{id}}>{{name}}</p> 

            {{/each}}
        </div>

        <div id='add-button'>
        {{#if this.data}}
            <div id ='help-victim'>
            {{#if this.seekerObj}}
           
                <p><button class='no-add' data-value={{this.modelData.[0].id}}>Added To Help List</button></p>

                
                {{else}}
                <p><button class='add' data-value={{this.modelData.[0].id}}>Help</button></p>
            
            {{/if}}
            </div>
            <div id ='safe'>
            {{#if this.modelData.[0].need_rescue}}
            
                <p><button class='mark-safe' data-value={{this.modelData.[0].id}}>Mark Safe</button></p>
                {{else}}
                <p><button class='mark-unsafe' data-value={{this.modelData.[0].id}}>Mark Unsafe</button></p>
            
            {{/if}}
            </div>
        {{/if}}
        </div>

        
    </div>

    <br>

    <div id='victim-map-wrapper'>
     <div id="individual-person-map" commentlass="mapping"></div>
    </div>

</div>





<div id='comment-box'>
    <h1> Comments </h1>
    <input type='textarea' name='comment' class='textbox' data-value={{this.modelData.[0].id}} placeholder='Enter your comments here'>
    <input value={{this.modelData.[0].id}} type='hidden' id='victim-id-comment'>

    <button class='submit-comment'>submit</button>
</div>
<br>
<div id='comment-list'>
<br>
{{#each this.modelData.[1]}}
    <div class='comment-with-name'>
        <div class= "seeker" id='seekid' data-value={{id}}><h3> {{seeker_name}}</h3></div> 
        <div class='comment-box'><p>{{description}}</p></div>

    </div>
<br>
{{/each}}

</div>



<p><button class='close'>close</button></p>



<script>
$(function($) {
   // Asynchronously Load the map API 
   var script = document.createElement('script');
   script.src = "http://maps.googleapis.com/maps/api/js?sensor=false&callback=initialize";
     script.id = 'google-maps-api'
   document.getElementById('victim-map-wrapper').appendChild(script);

});
 
var initialize = function() {
    var map;
    var bounds = new google.maps.LatLngBounds();
    var mapOptions = {
        mapTypeId: 'roadmap'
    };
                    
    // Display a map on the page
    map = new google.maps.Map(document.getElementById("individual-person-map"), mapOptions);
    map.setTilt(45);
        
    // Multiple Markers

 
    var markers = [
                ['{{this.modelData.[0].name}}', {{this.modelData.[0].geolocation}}],
          ];
                        
    // Info Window Content
    var infoWindowContent = [
        ['<div class="info_content">' +
        '<h3 class="see-victim-on-map" data-value={{this.modelData.[0].id}}>{{this.modelData.[0].name}}</h3>' +
        '<p>{{this.modelData.[0].convcreateddate}}</p>' + 
        '</div>'],
       ];
        
    // Display multiple markers on a map
    var infoWindow = new google.maps.InfoWindow(), marker, i;
    
    // Loop through our array of markers & place each one on the map  
    for( i = 0; i < markers.length; i++ ) {
        var position = new google.maps.LatLng(markers[i][1], markers[i][2]);
        bounds.extend(position);
        marker = new google.maps.Marker({
            position: position,
            map: map,
            title: markers[i][0]
        });
        
        // Allow each marker to have an info window    
        google.maps.event.addListener(marker, 'click', (function(marker, i) {
            return function() {
                infoWindow.setContent(infoWindowContent[i][0]);
                infoWindow.open(map, marker);
            }
        })(marker, i));

        // Automatically center the map fitting all markers on the screen
        map.fitBounds(bounds);
    }

    // Override our map zoom level once our fitBounds function runs (Make sure it only runs once)
    var boundsListener = google.maps.event.addListener((map), 'bounds_changed', function(event) {
        this.setZoom(14);
        google.maps.event.removeListener(boundsListener);
    });
    
}


</script>




