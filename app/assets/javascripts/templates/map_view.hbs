<div id="map_wrapper">
    <div id="map_canvas" class="mapping"></div>
</div>

<script>

$(function($) {

  var loadMapApi = function() {
    // Asynchronously Load the map API 
    var script = document.createElement('script');
    script.src = "http://maps.googleapis.com/maps/api/js?sensor=false&callback=initialize";
    script.id = 'google-maps-api'
    document.getElementById('map_wrapper').appendChild(script);
    console.log('Google maps API script appended.')
  };

  var removeElementsFromDomArray = function(domArray) {
    for (i = 0; i < domArray.length; i++) {
      domArray[i].parentNode.removeChild(domArray[i]);
      console.log(domArray[i] + ' removed.')
    }
  }

  var bodyScriptTagsOnDocumentLoad = document.querySelectorAll('body > script');
  var removebodyScriptTagsOnDocumentLoad = function() {
    if (bodyScriptTagsOnDocumentLoad) {
      removeElementsFromDomArray(bodyScriptTagsOnDocumentLoad);
    }
  }

  var divsOfClassPacContainerOnDocumentLoad = document.querySelectorAll('.pac-container');
  var removeDivsOfClassPacContainerOnDocumentLoad = function() {
    if (divsOfClassPacContainerOnDocumentLoad.length > 1) {
      removeElementsFromDomArray(divsOfClassPacContainerOnDocumentLoad);
    }
  }

  var actionAfterRemovingElementsFromDom = $.Deferred();

  actionAfterRemovingElementsFromDom.done(removebodyScriptTagsOnDocumentLoad, removeDivsOfClassPacContainerOnDocumentLoad).done(function() {
    loadMapApi()
  });

  actionAfterRemovingElementsFromDom.resolve();

});

var initialize = function() {
    var map;

    var bounds = new google.maps.LatLngBounds();
    
    var mapOptions = {
        mapTypeId: 'roadmap'
    };
                    
    // Display a map on the page
    map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
    map.setTilt(45);
        
    // Multiple Markers

    var markers = [
       	{{#each this}}
			['{{name}}', {{geolocation}}],
		{{/each}}
    ];


                        
    // Info Window Content
    var infoWindowContent = [
    	{{#each this}}
        ['<div class="info_content">' +
        '<h3 class="see-victim-on-map" data-value={{id}}>{{name}}</h3>' +
        '<p>{{convcreateddate}}</p>' + 
        '</div>'],
        {{/each}}
    ];
        
    // Display multiple markers on a map
    var infoWindow = new google.maps.InfoWindow(), marker, i;
    
    // Loop through our array of markers & place each one on the map  
    for( i = 0; i < markers.length; i++ ) {
        var position = new google.maps.LatLng(markers[i][1], markers[i][2]);
        bounds.extend(position);
        marker = new google.maps.Marker({
            position: position,
            map: map,
            title: markers[i][0]
        });
        
        // Allow each marker to have an info window    
        google.maps.event.addListener(marker, 'click', (function(marker, i) {
            return function() {
                infoWindow.setContent(infoWindowContent[i][0]);
                infoWindow.open(map, marker);
            }
        })(marker, i));

        // Automatically center the map fitting all markers on the screen
        map.fitBounds(bounds);
    }

    // // Override our map zoom level once our fitBounds function runs (Make sure it only runs once)
    // var boundsListener = google.maps.event.addListener((map), 'bounds_changed', function(event) {
    //     this.setZoom(14);
    //     google.maps.event.removeListener(boundsListener);
    // });
    
}

</script>